!function(){try{if("undefined"!=typeof window&&!window.BugerZ&&!window.Bugerz){const stub={_q:[],_enqueue(fnName,args){this._q.push({fn:fnName,args:Array.from(args)})},init(){this._enqueue("init",arguments)},show(){this._enqueue("show",arguments)},hide(){this._enqueue("hide",arguments)},toggle(){this._enqueue("toggle",arguments)}};window.Bugerz=window.BugerZ=stub;try{const ev=new CustomEvent("bugerz:available",{detail:{instance:stub}});document.dispatchEvent(ev)}catch(e){try{const ev2=document.createEvent("Event");ev2.initEvent("bugerz:available",!0,!0),document.dispatchEvent(ev2)}catch(e2){}}}}catch(e){}}(),function(window,document){const DEFAULTS={publicKey:null,endpoint:"https://bugerz.com/api/report",placement:"bottom-right",addButton:!0,buttonText:"Report Bug",openOnInit:!1,autoSendOnError:!1,autoSendLimit:5,autoSendDelay:1e3,autoSendMaxDebounceCount:3,trackConsole:!0,consoleBufferSize:100,trackEvents:!1,eventBufferSize:100,allowPublicSubmission:!1,showPublicCheckbox:!1,showEmailField:!0,screenshot:!0,screenshotLibUrl:"https://unpkg.com/html-to-image@1.11.13/dist/html-to-image.js",formContainerSelector:null,screenshotOptions:{type:"jpeg",quality:.5,pixelRatio:.5},cssVars:{"--bz-bg":"#ffffff","--bz-color":"#333333","--bz-border":"#e0e0e0","--bz-radius":"8px","--bz-zindex":"10000","--bz-font":'"Segoe UI", Tahoma, Geneva, Verdana, sans-serif',"--bz-anti-primary":"#ffffff","--bz-primary":"#4F46E5","--bz-success":"#10B981","--bz-error":"#EF4444","--bz-overlay":"rgba(0, 0, 0, 0.5)"},onSuccess:resData=>{const msg=document.createElement("div");msg.style.cssText="position:fixed; top:1em; right:1em; padding:0.8em 1.2em; z-index:99;background:var(--bz-success); color:#fff; border-radius:var(--bz-radius); font-family:var(--bz-font); box-shadow:0 2px 6px rgba(0,0,0,0.2);overflow: hidden;";const close=document.createElement("button");close.classList.add("bugerz-close-button"),close.textContent="×",close.style.cssText="position:absolute; top:0.2em; right:0.4em; background:transparent; border:none; font-size:1.2rem; color:#fff; cursor:pointer; padding:0;",close.addEventListener("click",()=>msg.remove()),msg.appendChild(close);const text=document.createElement("span");if(text.textContent="✅ Report sent! Thanks for your feedback.",msg.appendChild(text),resData&&resData.url){const link=document.createElement("a");link.href=resData.url,link.textContent=" View Report",link.classList.add("bugerz-report-link"),link.target="_blank",link.style.cssText="margin-left:0.5em; color:#fff; text-decoration:underline;",msg.appendChild(link)}document.body.appendChild(msg)},onError:err=>{const msg=document.createElement("div");msg.style.cssText="position:fixed; top:1em; right:1em; padding:0.8em 1.2em; background:var(--bz-error); color:#fff; border-radius:var(--bz-radius); font-family:var(--bz-font); box-shadow:0 2px 6px rgba(0,0,0,0.2);overflow: hidden;";const close=document.createElement("button");close.classList.add("bugerz-close-button"),close.textContent="×",close.style.cssText="position:absolute; top:0.2em; right:0.4em; background:transparent; border:none; font-size:1.2rem; color:#fff; cursor:pointer; padding:0;",close.addEventListener("click",()=>msg.remove()),msg.appendChild(close);const text=document.createElement("span");text.textContent=`❌ Failed to send report: ${err}`,msg.appendChild(text),document.body.appendChild(msg)}};function extend(dest,src){for(let k in src)null!=src[k]&&(dest[k]=src[k]);return dest}class CircularBuffer{constructor(size){this.size=size,this.buf=[]}push(item){this.buf.push(item),this.buf.length>this.size&&this.buf.shift()}get(){return this.buf.slice()}}function hijackConsole(opts,consoleBuffer,eventBuffer){let sendCount=0,debounceTimer=null,debounceRuns=0,lastFields=null;["log","warn","error","info"].forEach(level=>{const orig=console[level];console[level]=function(...args){consoleBuffer.push({level:level,args:args,timestamp:(new Date).toISOString()}),orig.apply(console,args),"error"===level&&opts&&opts.autoSendOnError&&(opts.publicKey?(lastFields={description:`Auto‐triggered on console.${level}:\n${args.join(" ")}`},sendCount>=opts.autoSendLimit||(debounceTimer&&debounceRuns<opts.maxDebounceCount&&(clearTimeout(debounceTimer),debounceRuns++),debounceTimer=setTimeout(async()=>{if(sendCount<opts.autoSendLimit&&opts.publicKey)try{await sendReport(opts,consoleBuffer,eventBuffer,lastFields),sendCount++,debounceRuns=0}catch(err){console.debug("BugerZ: Error sending auto report:",err)}debounceTimer=null,debounceRuns=0},opts.autoSendDelay))):console.debug("BugerZ: publicKey not set, cannot send error report"))}})}async function sendReport(opts,consoleBuf,eventBuf,fields={}){const data={publicKey:opts.publicKey,url:location.href,title:document.title,userAgent:navigator.userAgent,timestamp:(new Date).toISOString(),console:consoleBuf.get(),events:opts.trackEvents?eventBuf.get():void 0,fields:fields||{}};if(opts.screenshot){await new Promise(res=>{if(window.htmlToImage)return res();const s=document.createElement("script");s.src=opts.screenshotLibUrl,s.onload=res,document.head.appendChild(s)});try{const imgOpts=opts.screenshotOptions||{};"jpeg"===imgOpts.type?data.screenshot=await window.htmlToImage.toJpeg(document.body,{quality:imgOpts.quality,pixelRatio:imgOpts.pixelRatio,width:imgOpts.width,height:imgOpts.height}):data.screenshot=await window.htmlToImage.toPng(document.body,{pixelRatio:imgOpts.pixelRatio})}catch(err){console.debug("Screenshot failed:",err)}}try{const res=await fetch(opts.endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}),resData=await res.json();if(!resData.ok)throw new Error(resData.message||res.statusText||res.status);return resData}catch(err){throw console.debug("BugerZ: Error sending report:",err),err}}window.BugerZ={show:function(){const ov=document.getElementById("bugerz-overlay"),ct=document.getElementById("bugerz-form-container");ov&&ct&&(ov.style.display="block",ct.style.display="block")},hide:function(){const ov=document.getElementById("bugerz-overlay"),ct=document.getElementById("bugerz-form-container");ov&&ct&&(ov.style.display="none",ct.style.display="none")},toggle:function(){const ov=document.getElementById("bugerz-overlay"),ct=document.getElementById("bugerz-form-container");ov&&ct&&("block"===ov.style.display?this.hide():this.show())},init:function(userOptions={}){const opts=extend(extend({},DEFAULTS),userOptions);if(opts.cssVars=extend({},DEFAULTS.cssVars),userOptions.cssVars&&extend(opts.cssVars,userOptions.cssVars),!opts.publicKey)throw new Error("BugerZ: publicKey is required");!function(vars){Object.keys(vars).forEach(key=>{document.documentElement.style.setProperty(key,vars[key])});const s=document.createElement("style");s.innerHTML='\n      #bugerz-overlay {\n        display: none;\n        position: fixed;\n        top: 0; left: 0;\n        width: 100%; height: 100%;\n        background: var(--bz-overlay);\n        z-index: calc(var(--bz-zindex) - 1);\n      }\n      #bugerz-form-container {\n        display: none;\n        position: fixed;\n        top: 50%; left: 50%;\n        transform: translate(-50%, -50%);\n        background: var(--bz-bg);\n        color: var(--bz-color);\n        border: 1px solid var(--bz-border);\n        border-radius: var(--bz-radius);\n        padding: 24px;\n        width: 360px;\n        max-width: 90%;\n        box-shadow: 0 4px 16px rgba(0,0,0,0.1);\n        z-index: var(--bz-zindex);\n      }\n      #bugerz-form-container h2 { margin: 0 0 16px; font-size:1.25rem; font-weight:600; color:var(--bz-primary); }\n      #bugerz-form-container .field { margin-bottom:8px; display:flex; flex-direction:column; }\n      #bugerz-form-container label { font-weight:600; font-size:0.9rem; }\n      #bugerz-form-container input[type="text"],\n      #bugerz-form-container input[type="email"],\n      #bugerz-form-container textarea,\n      #bugerz-form-container select {\n        padding:8px;\n        border:1px solid var(--bz-border);\n        border-radius:var(--bz-radius);\n        font-size:0.9rem;\n        transition:border-color 0.2s ease;\n      }\n      #bugerz-form-container input:focus,\n      #bugerz-form-container textarea:focus,\n      #bugerz-form-container select:focus { outline:none; border-color:var(--bz-primary); }\n      #bugerz-form-container .checkbox-field { display:flex; align-items:center; gap:8px; flex-direction:row; }\n      #bugerz-form-container button[type="submit"] {\n        width:100%; padding:12px;\n        background:var(--bz-primary); color:var(--bz-anti-primary);\n        border:none; border-radius:var(--bz-radius);\n        font-size:1rem; font-weight:600;\n        cursor:pointer; transition:background 0.2s ease;\n      }\n      #bugerz-form-container button[type="submit"]:hover { background:#4338CA; }\n      #bugerz-form-container .close-btn {\n        position:absolute; top:-15px; right:-5px;\n        background:transparent; border:none;\n        font-size:1.25rem; cursor:pointer; color:var(--bz-color);\n      }\n      #bugerz-form-container.loading { opacity:0.6; pointer-events:none; }\n      #bugerz-spinner {\n        display:none; position:absolute;\n        top:50%; left:50%; width:32px; height:32px;\n        margin:-16px 0 0 -16px;\n        border:4px solid rgba(0,0,0,0.1);\n        border-top-color:var(--bz-primary);\n        border-radius:50%; animation:spin 1s linear infinite;\n        z-index:calc(var(--bz-zindex) + 1);\n      }\n      @keyframes spin { to { transform: rotate(360deg); } }\n    ',document.head.appendChild(s)}(opts.cssVars);const consoleBuf=new CircularBuffer(opts.consoleBufferSize),eventBuf=opts.trackEvents?new CircularBuffer(opts.eventBufferSize):null;var buffer;opts.trackConsole&&hijackConsole(opts,consoleBuf,eventBuf),opts.trackEvents&&(buffer=eventBuf,["click","keydown"].forEach(evt=>{document.addEventListener(evt,e=>buffer.push({type:evt,tag:e.target.tagName,x:e.clientX,y:e.clientY,key:e.key||null,timestamp:(new Date).toISOString()}),!0)}));let container,overlay=document.getElementById("bugerz-overlay");overlay||(overlay=document.createElement("div"),overlay.id="bugerz-overlay",document.body.appendChild(overlay)),opts.formContainerSelector?(container=document.querySelector(opts.formContainerSelector)||document.createElement("div"),container.parentNode||document.body.appendChild(container)):(container=document.createElement("div"),document.body.appendChild(container)),container.id="bugerz-form-container";const form=function(opts){const form=document.createElement("form");return form.id="bugerz-form",form.style.position="relative",form.innerHTML=`\n      <button type="button" class="close-btn" aria-label="Close">×</button>\n      <div id="bugerz-spinner"></div>\n      <h2>Report a Bug</h2>\n      <div class="field">\n        <label for="bz-description">What happened?</label>\n        <textarea id="bz-description" name="description" rows="4" required placeholder="Describe the bug in full please."></textarea>\n      </div>\n      ${opts.showEmailField?'<div class="field"><label for="bz-email">Email (optional - get bug link & updates)</label><input type="email" id="bz-email" name="email" placeholder="your@example.com"></div>':""}\n      <div class="checkbox-field field">${opts.showPublicCheckbox?'<input type="checkbox" id="bz-public" name="isPublic"><label for="bz-public">Make public</label>':""}\n      </div>\n      \n      <button type="submit">Send Report</button>\n    `,form}(opts);if(container.innerHTML="",container.appendChild(form),form.querySelector(".close-btn").addEventListener("click",()=>this.hide()),overlay.addEventListener("click",()=>this.hide()),opts.addButton&&!document.getElementById("bugerz-report-button")){const btn=function(text,placement,cssVars){const btn=document.createElement("button");btn.id="bugerz-report-button",btn.innerText=text,Object.assign(btn.style,{position:"fixed",zIndex:cssVars["--bz-zindex"],padding:"0.6em 1.2em",border:"none",cursor:"pointer",background:cssVars["--bz-primary"],color:"#fff",fontFamily:cssVars["--bz-font"],borderRadius:cssVars["--bz-radius"],boxShadow:"0 2px 6px rgba(0,0,0,0.15)",transition:"transform 0.2s ease"}),btn.addEventListener("mouseover",()=>btn.style.transform="scale(1.05)"),btn.addEventListener("mouseout",()=>btn.style.transform="scale(1)");const[vert,hor]=placement.split("-");return btn.style[vert]="1em",btn.style[hor]="1em",btn}(opts.buttonText,opts.placement,opts.cssVars);document.body.appendChild(btn),btn.addEventListener("click",()=>this.show())}opts.openOnInit&&this.show(),form.addEventListener("submit",async e=>{e.preventDefault(),form.classList.add("loading"),this.hide();const spinner=container.querySelector("#bugerz-spinner");spinner.style.display="block";let fields={};Array.from(form.elements).forEach(el=>{el.name&&(fields[el.name]="checkbox"===el.type?el.checked:el.value)});try{let sent=await sendReport(opts,consoleBuf,eventBuf,fields);form.reset(),opts.onSuccess&&opts.onSuccess(sent)}catch(err){opts.onError&&opts.onError(err)}finally{spinner.style.display="none",form.classList.remove("loading")}});try{if(this._initialized=!0,void 0!==window){try{window.Bugerz=window.BugerZ}catch(err){}try{const ev=new CustomEvent("bugerz:ready",{detail:{instance:window.BugerZ}});document.dispatchEvent(ev)}catch(err){try{const ev2=document.createEvent("Event");ev2.initEvent("bugerz:ready",!0,!0),ev2.detail={instance:window.BugerZ},document.dispatchEvent(ev2)}catch(e){}}}}catch(e){}}};try{if(void 0!==window){try{window.Bugerz=window.BugerZ}catch(err){}const maybeStub=window.Bugerz||window.BugerZ;if(maybeStub&&maybeStub._q&&Array.isArray(maybeStub._q)){const q=maybeStub._q.slice();maybeStub._q.length=0,q.forEach(item=>{try{const fn=window.BugerZ[item.fn]||window.Bugerz&&window.Bugerz[item.fn];"function"==typeof fn&&fn.apply(window.BugerZ,item.args)}catch(e){console.debug("BugerZ: error replaying queued call",e)}})}try{const ev=new CustomEvent("bugerz:available:ready",{detail:{instance:window.BugerZ}});document.dispatchEvent(ev)}catch(e){}}}catch(e){}}(window,document);
